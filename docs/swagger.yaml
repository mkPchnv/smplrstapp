basePath: /api/v1
definitions:
  dto.ActivityCreateDto:
    properties:
      distance:
        type: number
      duration:
        type: integer
      sport:
        enum:
        - run
        - swim
        - bike
        example: bike
        type: string
      training_date:
        type: string
      user_id:
        type: string
    type: object
  dto.UserCreateDto:
    properties:
      age:
        type: integer
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  entity.Activity:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      distance:
        type: number
      duration:
        type: integer
      id:
        type: string
      sport:
        enum:
        - run
        - swim
        - bike
        type: string
      training_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  entity.User:
    properties:
      activities:
        items:
          $ref: '#/definitions/entity.Activity'
        type: array
      age:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8020
info:
  contact: {}
  description: Rest api for test application on go lang
  title: Simple rest api
  version: "1.0"
paths:
  /activities:
    post:
      consumes:
      - application/json
      description: create activity for user and return result
      parameters:
      - description: The input activity dto
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ActivityCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Activity'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create New Activity At User
      tags:
      - activities
  /users:
    get:
      consumes:
      - application/json
      description: get all users
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: create user and return result
      parameters:
      - description: The input user dto
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create New User
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get user by identificator
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User by id
      tags:
      - users
swagger: "2.0"
